[gd_scene load_steps=56 format=2]

[ext_resource path="res://Assets/Meshes/playermodel_old.glb" type="PackedScene" id=1]
[ext_resource path="res://Player/Player.gd" type="Script" id=2]
[ext_resource path="res://Assets/Textures/hair_lowres.png" type="Texture" id=3]
[ext_resource path="res://Assets/Materials/shoes.tres" type="Material" id=4]
[ext_resource path="res://Assets/Textures/jeans_lowres.png" type="Texture" id=5]
[ext_resource path="res://Assets/Audio/Footsteps/Grass/med_grass_walk.wav" type="AudioStream" id=7]
[ext_resource path="res://Assets/Materials/leggings.tres" type="Material" id=8]
[ext_resource path="res://Assets/Audio/Footsteps/Grass/slow_grass_walk.wav" type="AudioStream" id=9]

[sub_resource type="CapsuleShape" id=1]
radius = 0.303544
height = 1.14889

[sub_resource type="SphereMesh" id=39]
radius = 0.03
height = 0.06

[sub_resource type="Shader" id=50]
code = "shader_type spatial;
render_mode vertex_lighting, skip_vertex_transform, 
			specular_phong, diffuse_lambert_wrap;

uniform sampler2D albedo: hint_black_albedo;
uniform sampler2D specular: hint_black;
uniform sampler2D emission: hint_black;

uniform float jitter: hint_range(0.0, 1.0) = 0.2;
uniform bool jitter_z_coordinate = true;
uniform bool jitter_depth_independent = true;
uniform bool affine_texture_mapping = true;
uniform float alpha_scissor: hint_range(0.0, 1.0) = 1.0;

void vertex() {
	VERTEX = (MODELVIEW_MATRIX * vec4(VERTEX, 1.0)).xyz;
	
	float z_orig = VERTEX.z;
	float i = (1.0 - jitter) * min(VIEWPORT_SIZE.x, VIEWPORT_SIZE.y) / 2.0;
	
	if (jitter_depth_independent) {
		float w = (PROJECTION_MATRIX * vec4(VERTEX, 1.0)).w;
		VERTEX = round(VERTEX / w * i) / i * w;
	} else {
		VERTEX = round(VERTEX * i) / i;
	}
	
	if (!jitter_z_coordinate) {
		VERTEX.z = z_orig;
	}

	if (affine_texture_mapping) {
		UV *= VERTEX.z;
	}
}

void fragment() {
	vec2 uv = UV;
	
	if (affine_texture_mapping) {
		uv /= VERTEX.z;
	}
	
	ALBEDO = texture(albedo, uv).rgb;
	ALPHA = texture(albedo, uv).a;
	ALPHA_SCISSOR = alpha_scissor;
	EMISSION = texture(emission, uv).rgb;
	SPECULAR = texture(specular, uv).r;
}"

[sub_resource type="ShaderMaterial" id=51]
shader = SubResource( 50 )
shader_param/jitter = 0.2
shader_param/jitter_z_coordinate = true
shader_param/jitter_depth_independent = true
shader_param/affine_texture_mapping = true
shader_param/alpha_scissor = 1.0
shader_param/albedo = ExtResource( 3 )

[sub_resource type="Shader" id=52]
code = "shader_type spatial;
render_mode vertex_lighting, skip_vertex_transform, 
			specular_phong, diffuse_lambert_wrap;

uniform sampler2D albedo: hint_black_albedo;
uniform sampler2D specular: hint_black;
uniform sampler2D emission: hint_black;

uniform float jitter: hint_range(0.0, 1.0) = 0.5;
uniform bool jitter_z_coordinate = true;
uniform bool jitter_depth_independent = true;
uniform bool affine_texture_mapping = true;
uniform float alpha_scissor: hint_range(0.0, 1.0) = 1.0;

void vertex() {
	VERTEX = (MODELVIEW_MATRIX * vec4(VERTEX, 1.0)).xyz;
	
	float z_orig = VERTEX.z;
	float i = (1.0 - jitter) * min(VIEWPORT_SIZE.x, VIEWPORT_SIZE.y) / 2.0;
	
	if (jitter_depth_independent) {
		float w = (PROJECTION_MATRIX * vec4(VERTEX, 1.0)).w;
		VERTEX = round(VERTEX / w * i) / i * w;
	} else {
		VERTEX = round(VERTEX * i) / i;
	}
	
	if (!jitter_z_coordinate) {
		VERTEX.z = z_orig;
	}

	if (affine_texture_mapping) {
		UV *= VERTEX.z;
	}
}

void fragment() {
	vec2 uv = UV;
	
	if (affine_texture_mapping) {
		uv /= VERTEX.z;
	}
	
	ALBEDO = texture(albedo, uv).rgb;
	ALPHA = texture(albedo, uv).a;
	ALPHA_SCISSOR = alpha_scissor;
	EMISSION = texture(emission, uv).rgb;
	SPECULAR = texture(specular, uv).r;
}"

[sub_resource type="StreamTexture" id=53]
flags = 18
load_path = "res://.import/turtleneck_lowres.png-e0b6e5bf61dd34531aa640ca580e3e0c.stex"

[sub_resource type="ShaderMaterial" id=54]
shader = SubResource( 52 )
shader_param/jitter = 0.2
shader_param/jitter_z_coordinate = true
shader_param/jitter_depth_independent = true
shader_param/affine_texture_mapping = true
shader_param/alpha_scissor = 1.0
shader_param/albedo = SubResource( 53 )

[sub_resource type="Shader" id=55]
code = "shader_type spatial;
render_mode vertex_lighting, skip_vertex_transform, 
			specular_phong, diffuse_lambert_wrap;

uniform sampler2D albedo: hint_black_albedo;
uniform sampler2D specular: hint_black;
uniform sampler2D emission: hint_black;

uniform float jitter: hint_range(0.0, 1.0) = 0.2;
uniform bool jitter_z_coordinate = true;
uniform bool jitter_depth_independent = true;
uniform bool affine_texture_mapping = true;
uniform float alpha_scissor: hint_range(0.0, 1.0) = 1.0;

void vertex() {
	VERTEX = (MODELVIEW_MATRIX * vec4(VERTEX, 1.0)).xyz;
	
	float z_orig = VERTEX.z;
	float i = (1.0 - jitter) * min(VIEWPORT_SIZE.x, VIEWPORT_SIZE.y) / 2.0;
	
	if (jitter_depth_independent) {
		float w = (PROJECTION_MATRIX * vec4(VERTEX, 1.0)).w;
		VERTEX = round(VERTEX / w * i) / i * w;
	} else {
		VERTEX = round(VERTEX * i) / i;
	}
	
	if (!jitter_z_coordinate) {
		VERTEX.z = z_orig;
	}

	if (affine_texture_mapping) {
		UV *= VERTEX.z;
	}
}

void fragment() {
	vec2 uv = UV;
	
	if (affine_texture_mapping) {
		uv /= VERTEX.z;
	}
	
	ALBEDO = texture(albedo, uv).rgb;
	ALPHA = texture(albedo, uv).a;
	ALPHA_SCISSOR = alpha_scissor;
	EMISSION = texture(emission, uv).rgb;
	SPECULAR = texture(specular, uv).r;
}"

[sub_resource type="ShaderMaterial" id=56]
shader = SubResource( 55 )
shader_param/jitter = 0.2
shader_param/jitter_z_coordinate = true
shader_param/jitter_depth_independent = true
shader_param/affine_texture_mapping = true
shader_param/alpha_scissor = 1.0
shader_param/albedo = ExtResource( 5 )

[sub_resource type="AnimationNodeAnimation" id=16]
animation = "playermodel_reload_shotgun_end_E"

[sub_resource type="AnimationNodeAnimation" id=17]
animation = "playermodel_reload_shotgun_end_F"

[sub_resource type="AnimationNodeAnimation" id=18]
animation = "playermodel_idle_shotgun-loop"

[sub_resource type="AnimationNodeAnimation" id=19]
animation = "playermodel_reload_shotgun_mid-loop"

[sub_resource type="AnimationNodeAnimation" id=20]
animation = "playermodel_reload_shotgun_start"

[sub_resource type="AnimationNodeStateMachineTransition" id=21]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=22]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=23]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachineTransition" id=24]
switch_mode = 2
auto_advance = true

[sub_resource type="AnimationNodeStateMachineTransition" id=25]
switch_mode = 2
auto_advance = true

[sub_resource type="AnimationNodeStateMachineTransition" id=26]
switch_mode = 2

[sub_resource type="AnimationNodeStateMachine" id=27]
states/end_e/node = SubResource( 16 )
states/end_e/position = Vector2( 946, 139 )
states/end_f/node = SubResource( 17 )
states/end_f/position = Vector2( 946, 249 )
states/idle/node = SubResource( 18 )
states/idle/position = Vector2( 593, 249 )
states/mid/node = SubResource( 19 )
states/mid/position = Vector2( 593, 139 )
states/start/node = SubResource( 20 )
states/start/position = Vector2( 410, 199 )
transitions = [ "start", "mid", SubResource( 21 ), "mid", "end_e", SubResource( 22 ), "mid", "end_f", SubResource( 23 ), "end_e", "idle", SubResource( 24 ), "end_f", "idle", SubResource( 25 ), "idle", "start", SubResource( 26 ) ]
start_node = "idle"
end_node = "idle"

[sub_resource type="AnimationNodeOneShot" id=28]
filter_enabled = true
filters = [ "Playermodel/Skeleton:hand.l", "Playermodel/Skeleton:hand.r", "Playermodel/Skeleton:lowerarm.l", "Playermodel/Skeleton:lowerarm.r", "Playermodel/Skeleton:upperarm.l", "Playermodel/Skeleton:upperarm.r" ]

[sub_resource type="AnimationNodeAnimation" id=29]
animation = "playermodel_shoot_shotgun"

[sub_resource type="AnimationNodeAnimation" id=30]
animation = "playermodel_walk_sway-loop"

[sub_resource type="AnimationNodeAnimation" id=31]
animation = "playermodel_aim_shotgun-loop"

[sub_resource type="AnimationNodeAnimation" id=32]
animation = "playermodel_idle_shotgun-loop"

[sub_resource type="AnimationNodeTransition" id=33]
input_count = 3
xfade_time = 0.1
input_0/name = "idle"
input_0/auto_advance = false
input_1/name = "aim"
input_1/auto_advance = false
input_2/name = "reload"
input_2/auto_advance = false

[sub_resource type="AnimationNodeBlend2" id=34]
filter_enabled = true
filters = [ "Playermodel/Skeleton:upperarm.l", "Playermodel/Skeleton:upperarm.r" ]

[sub_resource type="AnimationNodeBlendTree" id=35]
graph_offset = Vector2( -179.3, 5.25 )
nodes/output/position = Vector2( 840, 300 )
nodes/reload_fsm/node = SubResource( 27 )
nodes/reload_fsm/position = Vector2( -60, 360 )
nodes/shoot/node = SubResource( 28 )
nodes/shoot/position = Vector2( 660, 300 )
nodes/shoot_anim/node = SubResource( 29 )
nodes/shoot_anim/position = Vector2( -60, 480 )
nodes/sway_anim/node = SubResource( 30 )
nodes/sway_anim/position = Vector2( -60, 160 )
nodes/ub_aim_anim/node = SubResource( 31 )
nodes/ub_aim_anim/position = Vector2( -60, 260 )
nodes/ub_idle_anim/node = SubResource( 32 )
nodes/ub_idle_anim/position = Vector2( -60, 60 )
nodes/ub_transition/node = SubResource( 33 )
nodes/ub_transition/position = Vector2( 480, 200 )
nodes/walk_sway_blend/node = SubResource( 34 )
nodes/walk_sway_blend/position = Vector2( 280, 60 )
node_connections = [ "output", 0, "shoot", "ub_transition", 0, "walk_sway_blend", "ub_transition", 1, "ub_aim_anim", "ub_transition", 2, "reload_fsm", "shoot", 0, "ub_transition", "shoot", 1, "shoot_anim", "walk_sway_blend", 0, "ub_idle_anim", "walk_sway_blend", 1, "sway_anim" ]

[sub_resource type="AnimationNodeAnimation" id=40]
animation = "playermodel_walk_sway-loop"

[sub_resource type="AnimationNodeTransition" id=41]
input_count = 2
input_0/name = "empty_state"
input_0/auto_advance = false
input_1/name = "0_state"
input_1/auto_advance = false

[sub_resource type="AnimationNodeAnimation" id=42]
animation = "playermodel_walk_aim_back-loop"

[sub_resource type="AnimationNodeAnimation" id=43]
animation = "playermodel_walk_aim_forward-loop"

[sub_resource type="AnimationNodeAnimation" id=44]
animation = "playermodel_walk_aim_left-loop"

[sub_resource type="AnimationNodeAnimation" id=45]
animation = "playermodel_walk_aim_right-loop"

[sub_resource type="AnimationNodeBlendSpace2D" id=7]
blend_point_0/node = SubResource( 42 )
blend_point_0/pos = Vector2( 0, 1 )
blend_point_1/node = SubResource( 43 )
blend_point_1/pos = Vector2( 0, -1 )
blend_point_2/node = SubResource( 44 )
blend_point_2/pos = Vector2( -1, 0 )
blend_point_3/node = SubResource( 45 )
blend_point_3/pos = Vector2( 1, 0 )

[sub_resource type="AnimationNodeTimeScale" id=8]

[sub_resource type="AnimationNodeAnimation" id=46]
animation = "playermodel_walk_idle_back-loop"

[sub_resource type="AnimationNodeAnimation" id=47]
animation = "playermodel_walk_idle_forward-loop"

[sub_resource type="AnimationNodeAnimation" id=48]
animation = "playermodel_walk_idle_right-loop"

[sub_resource type="AnimationNodeAnimation" id=49]
animation = "playermodel_walk_idle_left-loop"

[sub_resource type="AnimationNodeBlendSpace2D" id=13]
blend_point_0/node = SubResource( 46 )
blend_point_0/pos = Vector2( 0, 1 )
blend_point_1/node = SubResource( 47 )
blend_point_1/pos = Vector2( 0, -1 )
blend_point_2/node = SubResource( 48 )
blend_point_2/pos = Vector2( 1, 0 )
blend_point_3/node = SubResource( 49 )
blend_point_3/pos = Vector2( -1, 0 )

[sub_resource type="AnimationNodeTimeScale" id=14]

[sub_resource type="AnimationNodeTransition" id=15]
input_count = 2
xfade_time = 0.1
input_0/name = "idle"
input_0/auto_advance = false
input_1/name = "aim"
input_1/auto_advance = false

[sub_resource type="AnimationNodeBlend2" id=36]
filter_enabled = true
filters = [ "Playermodel/Skeleton:body", "Playermodel/Skeleton:foot.l", "Playermodel/Skeleton:foot.r", "Playermodel/Skeleton:lowerleg.l", "Playermodel/Skeleton:lowerleg.r", "Playermodel/Skeleton:uppperleg.l", "Playermodel/Skeleton:uppperleg.r" ]

[sub_resource type="AnimationNodeBlendTree" id=37]
graph_offset = Vector2( -155, -4.5 )
nodes/0_tree/node = SubResource( 35 )
nodes/0_tree/position = Vector2( 200, 140 )
nodes/Animation/node = SubResource( 40 )
nodes/Animation/position = Vector2( 60, 20 )
nodes/current_weapon/node = SubResource( 41 )
nodes/current_weapon/position = Vector2( 420, 60 )
nodes/lb_aim_blendspace/node = SubResource( 7 )
nodes/lb_aim_blendspace/position = Vector2( 0, 420 )
nodes/lb_aim_scale/node = SubResource( 8 )
nodes/lb_aim_scale/position = Vector2( 220, 420 )
nodes/lb_idle_blendspace/node = SubResource( 13 )
nodes/lb_idle_blendspace/position = Vector2( 0, 260 )
nodes/lb_idle_scale/node = SubResource( 14 )
nodes/lb_idle_scale/position = Vector2( 220, 260 )
nodes/lb_transition/node = SubResource( 15 )
nodes/lb_transition/position = Vector2( 400, 320 )
nodes/output/position = Vector2( 880, 120 )
nodes/upper_lower_blend/node = SubResource( 36 )
nodes/upper_lower_blend/position = Vector2( 660, 120 )
node_connections = [ "output", 0, "upper_lower_blend", "current_weapon", 0, "Animation", "current_weapon", 1, "0_tree", "lb_aim_scale", 0, "lb_aim_blendspace", "lb_idle_scale", 0, "lb_idle_blendspace", "upper_lower_blend", 0, "current_weapon", "upper_lower_blend", 1, "lb_transition", "lb_transition", 0, "lb_idle_scale", "lb_transition", 1, "lb_aim_scale" ]

[sub_resource type="AnimationNodeStateMachinePlayback" id=38]

[node name="Player" instance=ExtResource( 1 )]
pause_mode = 1
collision_mask = 12
script = ExtResource( 2 )
SPEED = 3.0
ROTATION_SPEED = 10.0
CAMERA_FOV = 30.0
CAMERA_ZOOM = 2.0
CAMERA_ZOOM_RATE = 15.0

[node name="Hitbox" type="CollisionShape" parent="." index="0"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.876599, 0 )
shape = SubResource( 1 )

[node name="CamRotationH" type="Spatial" parent="." index="1"]

[node name="CamRotationV" type="Spatial" parent="CamRotationH" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.6, 0 )

[node name="CameraBoomX" type="SpringArm" parent="CamRotationH/CamRotationV" index="0"]
transform = Transform( 1.19249e-08, 0, -1, 0, 1, 0, 1, 0, 1.19249e-08, 0, 0, 0 )
collision_mask = 12

[node name="CameraBoomZ" type="SpringArm" parent="CamRotationH/CamRotationV/CameraBoomX" index="0"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0 )
collision_mask = 12
spring_length = 4.0

[node name="CameraOffset" type="Spatial" parent="CamRotationH/CamRotationV/CameraBoomX/CameraBoomZ" index="0"]
transform = Transform( 1.19249e-08, 0, -1, 0, 1, 0, 1, 0, 1.19249e-08, 0, 0, 0 )

[node name="Camera" type="ClippedCamera" parent="CamRotationH/CamRotationV/CameraBoomX/CameraBoomZ/CameraOffset" index="0" groups=["targets"]]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, -0.5 )
fov = 50.0
collision_mask = 6

[node name="UseCast" type="RayCast" parent="CamRotationH/CamRotationV/CameraBoomX/CameraBoomZ/CameraOffset/Camera" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0, 0 )
enabled = true
cast_to = Vector3( 0, 0, -7 )
collision_mask = 30

[node name="UseCrosshair" type="SpringArm" parent="CamRotationH/CamRotationV/CameraBoomX/CameraBoomZ/CameraOffset/Camera" index="1"]
transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0.5, 0, 0 )
collision_mask = 16
spring_length = 7.0

[node name="MeshInstance" type="MeshInstance" parent="CamRotationH/CamRotationV/CameraBoomX/CameraBoomZ/CameraOffset/Camera/UseCrosshair" index="0"]
mesh = SubResource( 39 )
material/0 = null

[node name="Front" type="Spatial" parent="CamRotationH" index="1"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 )

[node name="AudioManager" type="Spatial" parent="." index="2"]

[node name="SlowFootStepAudio" type="AudioStreamPlayer3D" parent="AudioManager" index="0"]
stream = ExtResource( 9 )
unit_db = -2.0
unit_size = 5.0
max_db = -2.0

[node name="MedFootStepAudio" type="AudioStreamPlayer3D" parent="AudioManager" index="1"]
stream = ExtResource( 7 )
unit_db = -2.0
unit_size = 5.0
max_db = -2.0

[node name="IKTargetNormalizer" type="Spatial" parent="." index="3"]
transform = Transform( -0.999999, 0.000679618, 0.000775689, 0.000699814, 0.999653, 0.026317, -0.000757519, 0.0263175, -0.999653, 4.65661e-10, 1.25113, 0.00699135 )
__meta__ = {
"_editor_description_": "Normalizes the rotation of the target so code can rotate the x value for aiming without messing up the rotation values"
}

[node name="SpineIKTarget" type="Position3D" parent="IKTargetNormalizer" index="0"]
transform = Transform( 0.92229, 0.0103881, -0.386487, -1.33741e-08, 0.999692, 0.0268698, 0.386626, -0.0247806, 0.921957, 0, 0, 0 )
__meta__ = {
"_editor_description_": "t: 0.003, 1.251, -0.006
r: -1.54, -22.744, -0"
}

[node name="Playermodel" parent="." index="4"]
transform = Transform( 1.19249e-08, 0, -1, 0, 1, 0, 1, 0, 1.19249e-08, -0.00551641, -0.00538754, 0.00100851 )

[node name="Skeleton" parent="Playermodel" index="0"]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, 0, 0 )

[node name="Hair Model" parent="Playermodel/Skeleton" index="0"]
material/0 = SubResource( 51 )

[node name="Playermodel Model" parent="Playermodel/Skeleton" index="1"]
material/0 = SubResource( 54 )
material/1 = ExtResource( 8 )
material/2 = SubResource( 56 )
material/3 = ExtResource( 4 )

[node name="WeaponHolder" type="BoneAttachment" parent="Playermodel/Skeleton" index="2"]
transform = Transform( 0.315185, 0.87004, -0.379064, -0.260368, -0.304822, -0.916129, -0.912616, 0.387446, 0.130455, -0.0347187, 1.21807, 0.193249 )
bone_name = "hand.r"

[node name="SpineIK" type="SkeletonIK" parent="Playermodel/Skeleton" index="3"]
process_priority = 1
root_bone = "body"
tip_bone = "upperbody"
target_node = NodePath("../../../IKTargetNormalizer/SpineIKTarget")

[node name="AnimationTree" type="AnimationTree" parent="." index="6"]
tree_root = SubResource( 37 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/0_tree/reload_fsm/playback = SubResource( 38 )
parameters/0_tree/shoot/active = false
parameters/0_tree/ub_transition/current = 0
parameters/0_tree/walk_sway_blend/blend_amount = 0
parameters/current_weapon/current = 1
parameters/lb_aim_blendspace/blend_position = Vector2( 0, 0 )
parameters/lb_aim_scale/scale = 0.4
parameters/lb_idle_blendspace/blend_position = Vector2( 0, 0 )
parameters/lb_idle_scale/scale = 1.0
parameters/lb_transition/current = 0
parameters/upper_lower_blend/blend_amount = 0.0

[node name="HeadTarget" type="Spatial" parent="." index="7" groups=["targets"]]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.61622, 0 )

[node name="Inventory" type="Node" parent="." index="8"]

[node name="HighlightTimer" type="Timer" parent="." index="9"]
wait_time = 0.1
one_shot = true
